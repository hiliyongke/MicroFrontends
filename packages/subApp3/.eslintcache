[{"/Users/yorke/Desktop/workspace/Code/learn/qiankunapp-main/app5/src/index.tsx":"1","/Users/yorke/Desktop/workspace/Code/learn/qiankunapp-main/app5/src/public_path.ts":"2","/Users/yorke/Desktop/workspace/Code/learn/qiankunapp-main/app5/src/core/app.pager.ts":"3","/Users/yorke/Desktop/workspace/Code/learn/qiankunapp-main/app5/src/App.tsx":"4","/Users/yorke/Desktop/workspace/Code/learn/qiankunapp-main/app5/src/routes/index.tsx":"5","/Users/yorke/Desktop/workspace/Code/learn/qiankunapp-main/app5/src/views/about.tsx":"6","/Users/yorke/Desktop/workspace/Code/learn/qiankunapp-main/app5/src/views/error/404.tsx":"7","/Users/yorke/Desktop/workspace/Code/learn/qiankunapp-main/app5/src/views/home.tsx":"8","/Users/yorke/Desktop/workspace/Code/learn/qiankunapp-main/app5/src/views/dev.tsx":"9","/Users/yorke/Desktop/workspace/Code/learn/qiankunapp-main/app5/src/routes/route.wrapper.tsx":"10","/Users/yorke/Desktop/workspace/Code/learn/qiankunapp-main/app5/src/layout/default/index.tsx":"11"},{"size":901,"mtime":1644982501000,"results":"12","hashOfConfig":"13"},{"size":144,"mtime":1644982501000,"results":"14","hashOfConfig":"13"},{"size":953,"mtime":1644982501000,"results":"15","hashOfConfig":"13"},{"size":1754,"mtime":1644982501000,"results":"16","hashOfConfig":"13"},{"size":1037,"mtime":1644982501000,"results":"17","hashOfConfig":"13"},{"size":230,"mtime":1644982501000,"results":"18","hashOfConfig":"13"},{"size":150,"mtime":1644982501000,"results":"19","hashOfConfig":"13"},{"size":226,"mtime":1644982501000,"results":"20","hashOfConfig":"13"},{"size":680,"mtime":1644982501000,"results":"21","hashOfConfig":"13"},{"size":309,"mtime":1644982501000,"results":"22","hashOfConfig":"13"},{"size":318,"mtime":1644982501000,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"6mtuhp",{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/yorke/Desktop/workspace/Code/learn/qiankunapp-main/app5/src/index.tsx",[],"/Users/yorke/Desktop/workspace/Code/learn/qiankunapp-main/app5/src/public_path.ts",[],"/Users/yorke/Desktop/workspace/Code/learn/qiankunapp-main/app5/src/core/app.pager.ts",["50"],"import { Subject, Observable } from \"rxjs\";\nimport { filter, throttleTime } from 'rxjs/operators';\n\n\nlet SubAppPager: Subject<any>;\n\nexport const setPager = (_pager: Subject<any>) => {\n\n    SubAppPager = _pager;\n}\n\nexport const getPager = (): Subject<any> => SubAppPager;\n\n\n// 消息来源\nexport enum PagerEnum {\n    BASE = 1,\n    SUB = 2\n}\n\n// 消息主体类型\nexport interface PagerMessage {\n    from: PagerEnum;\n    data: any;\n}\n\n// 子应用上报消息\nexport const SubAppPagerIssue = (data: any) => {\n    if (!SubAppPager) SubAppPager = getPager();\n    const msg: PagerMessage = {\n        from: PagerEnum.SUB,\n        data: data\n    };\n    SubAppPager.next({ ...msg });\n}\n\n// 订阅主应用下发的消息\nexport const SubAppPagerCollect = (): Observable<PagerMessage> => {\n    if (!SubAppPager) SubAppPager = getPager();\n    return SubAppPager.pipe(\n        throttleTime(500),\n        filter((msg: any) => msg.from == PagerEnum.BASE)\n    );\n}","/Users/yorke/Desktop/workspace/Code/learn/qiankunapp-main/app5/src/App.tsx",["51"],"import { Fragment, useEffect } from 'react';\nimport type { RouteObject } from 'react-router';\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport { Subscription } from 'rxjs';\nimport './App.css';\nimport { PagerMessage, SubAppPagerCollect } from './core/app.pager';\nimport logo from './logo.svg';\nimport routes from './routes';\n\n// @ts-ignore\nconst __qiankun__ = !!window.__POWERED_BY_QIANKUN__;\n\nconst renderRoutes = (routesData: RouteObject[]) => {\n  return routesData.map((item: RouteObject) => {\n    const { children, path, caseSensitive, element } = item;\n    if (Array.isArray(children) && children.length > 0) {\n      return (\n        <Route\n          key={path}\n          path={path}\n          caseSensitive={caseSensitive}\n          element={element}\n        >\n          {renderRoutes(children)}\n        </Route>\n      );\n    }\n    return (\n      <Route\n        key={path}\n        path={path}\n        caseSensitive={caseSensitive}\n        element={element}\n      />\n    );\n  });\n};\n\n\n\n\nfunction App() {\n\n\n\n  let pagerSub: Subscription = new Subscription();\n\n  useEffect(() => {\n    pagerSub = SubAppPagerCollect().subscribe((msg: PagerMessage) => {\n      if (msg) {\n        console.log(\"app5 接收到主应用消息 : \", msg.data);\n      }\n    });\n\n    return componentWillUnmount;\n  }, []);\n\n  const componentWillUnmount = () => {\n\n    pagerSub?.unsubscribe?.();\n  }\n\n\n  return (\n    <Fragment>\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <h1>App5 Component</h1>\n      </header>\n      <BrowserRouter basename={__qiankun__ ? '/portal/app5' : '/'}>\n        <Routes>{renderRoutes(routes)}</Routes>\n      </BrowserRouter>\n    </Fragment >\n  );\n}\n\nexport default App;\n","/Users/yorke/Desktop/workspace/Code/learn/qiankunapp-main/app5/src/routes/index.tsx",["52","53","54","55"],"import { FC, lazy, Suspense, useEffect, useMemo } from 'react';\nimport type { RouteObject } from 'react-router';\nimport RouteWrapper from './route.wrapper';\n\nconst HomePage = lazy(() => import('../views/home'));\nconst DevPage = lazy(() => import('../views/dev'));\nconst NotFoundPage = lazy(() => import('../views/error/404'));\nconst DefaultLayout = lazy(() => import('../layout/default'));\nconst AboutPage = lazy(() => import('../views/about'));\n\n\nconst routes: RouteObject[] = [\n    {\n        path: '/',\n        element: <RouteWrapper element={<HomePage />} />\n    },\n    {\n        path: '/dev',\n        element: <RouteWrapper element={<DevPage />} />\n    },\n    {\n        path: '/default',\n        element: <RouteWrapper element={<DefaultLayout />} />,\n        children:[\n            {\n                path: 'about',\n                element: <RouteWrapper element={<AboutPage />} />\n            }\n        ]\n    },\n    {\n        path: '/*',\n        element: <RouteWrapper element={<NotFoundPage />} />\n    }\n];\n\n\n\nexport default routes;","/Users/yorke/Desktop/workspace/Code/learn/qiankunapp-main/app5/src/views/about.tsx",[],"/Users/yorke/Desktop/workspace/Code/learn/qiankunapp-main/app5/src/views/error/404.tsx",[],"/Users/yorke/Desktop/workspace/Code/learn/qiankunapp-main/app5/src/views/home.tsx",[],"/Users/yorke/Desktop/workspace/Code/learn/qiankunapp-main/app5/src/views/dev.tsx",["56"],"import { Button } from \"antd\";\nimport { useNavigate } from \"react-router-dom\";\nimport { SubAppPagerIssue } from \"../core/app.pager\";\n\n\nfunction Dev() {\n\n    const navigate = useNavigate();\n\n    const onIssue = () => {\n\n        SubAppPagerIssue('i am from app5');\n    }\n\n    const handleClick = () => {\n\n        // naviaget(to)默认就是 history.push\n        navigate('/default/about');\n    }\n\n    return (\n        <div className=\"Dev\">\n            <h1>Dev Component</h1>\n            <br />\n            <Button type=\"primary\" onClick={onIssue}>上报信息</Button>\n            <br />\n            <a onClick={handleClick}>to about</a>\n        </div>\n    );\n}\n\nexport default Dev;","/Users/yorke/Desktop/workspace/Code/learn/qiankunapp-main/app5/src/routes/route.wrapper.tsx",[],"/Users/yorke/Desktop/workspace/Code/learn/qiankunapp-main/app5/src/layout/default/index.tsx",[],{"ruleId":"57","severity":1,"message":"58","line":42,"column":39,"nodeType":"59","messageId":"60","endLine":42,"endColumn":41},{"ruleId":"61","severity":1,"message":"62","line":49,"column":16,"nodeType":"63","endLine":53,"endColumn":7},{"ruleId":"64","severity":1,"message":"65","line":1,"column":10,"nodeType":"66","messageId":"67","endLine":1,"endColumn":12},{"ruleId":"64","severity":1,"message":"68","line":1,"column":20,"nodeType":"66","messageId":"67","endLine":1,"endColumn":28},{"ruleId":"64","severity":1,"message":"69","line":1,"column":30,"nodeType":"66","messageId":"67","endLine":1,"endColumn":39},{"ruleId":"64","severity":1,"message":"70","line":1,"column":41,"nodeType":"66","messageId":"67","endLine":1,"endColumn":48},{"ruleId":"71","severity":1,"message":"72","line":27,"column":13,"nodeType":"73","endLine":27,"endColumn":38},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","Assignments to the 'pagerSub' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","@typescript-eslint/no-unused-vars","'FC' is defined but never used.","Identifier","unusedVar","'Suspense' is defined but never used.","'useEffect' is defined but never used.","'useMemo' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement"]